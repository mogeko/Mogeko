---
import Layout from "@/layouts/base-layout.astro";
import PostIndex from "@/components/post-index.astro";
import { TagsIcon } from "@/components/tags-icon";
import { getCollection, type CollectionEntry } from "astro:content";
import { getTime } from "date-fns";
import { slug } from "github-slugger";
import type { GetStaticPaths } from "astro";

export const getStaticPaths = (async () => {
  const tagsWithPosts = (
    await getCollection("posts", ({ data }) => {
      return import.meta.env.PROD ? data.draft !== true : true;
    })
  )
    .sort(({ data: a }, { data: b }) => getTime(b.date) - getTime(a.date))
    .reduce<Record<string, CollectionEntry<"posts">[]>>((acc, entry) => {
      entry.data.tags?.forEach((tag) => {
        acc[tag] = [entry, ...(acc[tag] ?? [])];
      });

      return acc;
    }, {});

  return Object.entries(tagsWithPosts).map(([tag, posts]) => ({
    props: { posts, tag },
    params: { tag: slug(tag) },
  }));
}) satisfies GetStaticPaths;

const { posts, tag } = Astro.props;
---

<Layout>
  <header class="mt-8 flex items-center justify-center py-16" slot="header">
    <h1 class="inline-flex flex-row items-center text-4xl font-bold">
      <TagsIcon tag={tag} className="mr-2 h-9 w-9" /><span>{tag}</span>
    </h1>
  </header>
  <main class="flex-1">
    <PostIndex posts={posts} />
  </main>
</Layout>
