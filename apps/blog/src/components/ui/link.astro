---
import type { HTMLAttributes } from "astro/types";
import { type VariantProps, cva } from "class-variance-authority";

const { class: className, variant, ...props } = Astro.props;
export const linkVariants = cva("relative", {
  variants: {
    variant: {
      default:
        "hover:shadow-primary shadow-[inset_0_-1px_0_0] hover:shadow-[inset_0_-.5em_0_0_var(--tw-shadow-color)]",
      underline:
        "hover:shadow-primary text-primary hover:shadow-[inset_0_-2px_0_0_var(--primary)]",
      tag: "text-accent hover:text-primary hover:shadow-primary hover:shadow-[inset_0_-2px_0_0_var(--primary)]",
    },
  },
  defaultVariants: {
    variant: "default",
  },
});

type Props = HTMLAttributes<"a"> & VariantProps<typeof linkVariants>;
---

<a class:list={[linkVariants({ variant }), className]} {...props}><slot /></a>
